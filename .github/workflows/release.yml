name: Release
on:
  push:
    branches-ignore:
      - "gh-pages*"
  pull_request:
    branches-ignore:
      - "gh-pages*"
jobs:
  test:
    name: Test Job
    # Support [skip ci] out of box with github actions Workaround
    # Only works for push https://github.com/actions/runner/issues/774
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && contains(toJson(github.event.commits), '[skip ci]') == false)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x" # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip -V
          pip install --upgrade -e .
      - name: Validate & Coverage Report
        run: |
          "./scripts/pep8check.sh"
          "./scripts/coverage.sh"
        # TODO add more lines here to be executed in the test stage e.g. pyinstaller etc.
  generate-linux:
    name: Generate executable file
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout python3.x
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip -V
          pip install --upgrade -e .
      - name: Run Pyinstaller
        run: |
          "./scripts/pyinstaller.sh"
        # upload linux-binary to github actions
      - name: Upload linux-binary
        uses: actions/upload-artifact@v2
        with:
          name: linux-binary
          path: linux-binary.zip
          retention-days: 1
  release:
    name: Release Job
    runs-on: ubuntu-latest
    needs:
      - test
      - generate-linux
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          pip install --upgrade pip testresources setuptools wheel
          pip -V
          pip install --upgrade -e .
      - name: Setup NodeJS LTS
        uses: actions/setup-node@v2
      - name: Install dependencies
        run: |
          npm prune && npm i
          gulp validate
      # download our binaries
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-binary
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: npx semantic-release
